// Generated by CoffeeScript 1.6.3
var line_chart;

window.fake_data = function() {
  var last, _i, _results;
  last = Math.random() * 100;
  return (function() {
    _results = [];
    for (_i = 0; _i < 200; _i++){ _results.push(_i); }
    return _results;
  }).apply(this).map(function(i) {
    return {
      close: parseInt(last + (Math.random() * 10) - 20),
      date: d3.time.format("%d").parse("" + i)
    };
  });
};

line_chart = function(sel) {
  var data, height, line, margin, parseDate, svg, width, x, xAxis, y, yAxis;
  if (sel == null) {
    sel = "body";
  }
  margin = {
    top: 20,
    right: 20,
    bottom: 30,
    left: 50
  };
  width = window.screen.availWidth - margin.left - margin.right;
  height = 80 - margin.top - margin.bottom;
  parseDate = d3.time.format("%d-%b-%y").parse;
  x = d3.time.scale().range([0, width]);
  y = d3.scale.linear().range([height, 0]);
  xAxis = d3.svg.axis().scale(x).orient("bottom");
  yAxis = d3.svg.axis().scale(y).orient("left");
  line = d3.svg.line().x(function(d) {
    return x(d.date);
  }).y(function(d) {
    return y(d.close);
  });
  svg = d3.select(sel).attr("width", width).attr("height", height).append("g");
  data = fake_data();
  x.domain(d3.extent(data, function(d) {
    return d.date;
  }));
  y.domain(d3.extent(data, function(d) {
    return d.close;
  }));
  return svg.append("path").datum(data).attr("class", "line").attr("d", line);
};

/*
//@ sourceMappingURL=line_chart.map
*/
